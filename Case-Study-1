
LINK: https://8weeksqlchallenge.com/case-study-1/

1. What is the total amount each customer spent at the restaurant?
 
 Ans-1
select s.customer_id, sum(m.price)
from dannys_diner.sales s
left join dannys_diner.menu m
on s.product_id = m.product_id
group by s.customer_id

-- 2. How many days has each customer visited the restaurant?
select s.customer_id,count(distinct order_date) as ttoal_days
from dannys_diner.sales s
group by 1


-- 3. What was the first item from the menu purchased by each customer?
with cte as(select *,
dense_rank() over(partition by customer_id order by order_date) as rnk
from dannys_diner.sales s
left join dannys_diner.menu m
on s.product_id = m.product_id)

select customer_id, product_name
from cte


-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
	SELECT 
    product_name,
   count(1)
   FROM dannys_diner.sales AS s
	JOIN dannys_diner.menu AS m
		ON s.product_id = m.product_id
        group by 1
        order by count(1) desc
	
 5. Which item was the most popular for each customer?

	with cte as (SELECT 
    customer_id,
    product_name,
    count(1),
   dense_rank() over(order by count(1) desc) as rnk
   FROM dannys_diner.sales AS s
	JOIN dannys_diner.menu AS m
		ON s.product_id = m.product_id
        group by 1,2
        order by 1, count(1) desc)
        
   select customer_id,
   product_name
   from cte
   where rnk=1
   
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

  with cte as (SELECT 
    s.customer_id, 
    m.join_date, 
    s.order_date, 
    s.product_id,
    mm.product_name,
    mm.price,
    join_date-order_date as diff_date
    
  FROM dannys_diner.sales AS s
	JOIN dannys_diner.members AS m
		ON s.customer_id = m.customer_id
    JOIN dannys_diner.menu mm
    on s.product_id = mm.product_id)
    
    
    
 select customer_id,
 sum(case 
    when product_name='sushi' then 20*price
    when diff_date between 0 and 6 then 20*price 
    else 10*price end)
 from cte 
 group by 1

--6. Which item was purchased first by the customer after they became a member?
WITH member_sales_cte AS 
(
  SELECT 
    s.customer_id, 
    m.join_date, 
    s.order_date, 
    s.product_id,
    DENSE_RANK() OVER(PARTITION BY s.customer_id ORDER BY s.order_date) AS rank
  FROM sales AS s
	JOIN members AS m
		ON s.customer_id = m.customer_id
	WHERE s.order_date >= m.join_date)
)

SELECT 
  s.customer_id, 
  s.order_date, 
  m2.product_name 
FROM member_sales_cte AS s
JOIN menu AS m2
	ON s.product_id = m2.product_id
WHERE rank = 1;




--7. Which item was purchased just before the customer became a member?
WITH prior_member_purchased_cte AS 
(
  SELECT 
    s.customer_id, 
    m.join_date, 
    s.order_date, 
    s.product_id,
    DENSE_RANK() OVER(PARTITION BY s.customer_id ORDER BY s.order_date DESC)  AS rank
  FROM sales AS s
	JOIN members AS m
		ON s.customer_id = m.customer_id
	WHERE s.order_date < m.join_date
)

SELECT 
  s.customer_id, 
  s.order_date, 
  m2.product_name 
FROM prior_member_purchased_cte AS s
JOIN menu AS m2
	ON s.product_id = m2.product_id
WHERE rank = 1;



--8. What is the total items and amount spent for each member before they became a member?
SELECT 
  s.customer_id, 
  COUNT(DISTINCT s.product_id) AS unique_menu_item, 
  SUM(mm.price) AS total_sales
FROM sales AS s
JOIN members AS m
	ON s.customer_id = m.customer_id
JOIN menu AS mm
	ON s.product_id = mm.product_id
WHERE s.order_date < m.join_date
GROUP BY s.customer_id



-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select customer_id
, sum(case when m.product_name='sushi' then 20*price else 10*price end) as total_points
from dannys_diner.sales s
join dannys_diner.menu m
on s.product_id = m.product_id
group by 1

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

  with cte as (SELECT 
    s.customer_id, 
    m.join_date, 
    s.order_date, 
    s.product_id,
    mm.product_name,
    mm.price,
    join_date-order_date as diff_date
    
  FROM dannys_diner.sales AS s
	JOIN dannys_diner.members AS m
		ON s.customer_id = m.customer_id
    JOIN dannys_diner.menu mm
    on s.product_id = mm.product_id)
    
    
    
 select customer_id,
 sum(case 
    when product_name='sushi' then 20*price
    when diff_date between 0 and 6 then 20*price 
    else 10*price end)
 from cte 
 group by 1
 
 
 ******************BONUS QUESTION*********************
 
 Ans-1
 SELECT 
s.customer_id
, s.order_date
,mm.product_name
,mm.price
, case
    when join_date<=order_date then 'Y'
    else 'N'
    end as member

FROM dannys_diner.sales AS s
JOIN dannys_diner.members AS m
	ON s.customer_id = m.customer_id
JOIN dannys_diner.menu AS mm
	ON s.product_id = mm.product_id
order by 1,2,3;


Ans-2

with cte as (SELECT 
s.customer_id
, s.order_date
,mm.product_name
,mm.price
, case
    when join_date<=order_date then 'Y'
    else 'N'
    end as member

FROM dannys_diner.sales AS s
JOIN dannys_diner.members AS m
	ON s.customer_id = m.customer_id
JOIN dannys_diner.menu AS mm
	ON s.product_id = mm.product_id
order by 1,2,3)




select *,
case 
when member='N' then NULL
when member='Y' then  row_number() over(partition by customer_id,member
                      order by order_date, product_name)
end
from cte





